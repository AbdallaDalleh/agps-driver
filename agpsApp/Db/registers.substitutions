pattern { NAME,               DTYP,   ADDR,   TYPE,   EGU }
        { FIRMWARE_VERSION, asynFloat64, 0, f, "" }
        { INTERLOCKS, asynInt32, 10, i, "" }
        { FIRST_INTERLOCK, asynInt32, 11, i, "" }
        { SECOND_INTERLOCK, asynInt32, 12, i, "" }
        { WARNINGS, asynInt32, 13, i, "" }
        { HV_PS_STATUS, asynInt32, 14, i, "" }
        { FIL_PS_STATUS, asynInt32, 15, i, "" }
        { ERROR, asynFloat64, 16, f, A }
        { DRIVE_DIFF, asynFloat64, 17, f, A }
        { DRIVE, asynFloat64, 18, f, A }
        { TRIGGER_COUNT, asynInt32, 19, i, "" }
        { GUN_SPARKS_COUNT, asynInt32, 20, i, "" }
        { ADC_OFFSET0, asynFloat64, 21, f, V }
        { ADC_OFFSET1, asynFloat64, 22, f, V }
        { ADC_OFFSET2, asynFloat64, 23, f, V }
        { ADC_OFFSET3, asynFloat64, 24, f, V }
        { ADC_OFFSET4, asynFloat64, 25, f, V }
        { ADC_OFFSET5, asynFloat64, 26, f, V }
        { ADC_OFFSET6, asynFloat64, 27, f, V }
        { ADC_OFFSET7, asynFloat64, 28, f, V }
        { ADC_OFFSET8, asynFloat64, 29, f, V }
        { ADC_OFFSET9, asynFloat64, 30, f, V }
        { ADC_OFFSET10, asynFloat64, 31, f, V }
        { ADC_OFFSET11, asynFloat64, 32, f, V }
        { ADC_GAIN0, asynFloat64, 33, f, "" }
        { ADC_GAIN1, asynFloat64, 34, f, "" }
        { ADC_GAIN2, asynFloat64, 35, f, "" }
        { ADC_GAIN3, asynFloat64, 36, f, "" }
        { ADC_GAIN4, asynFloat64, 37, f, "" }
        { ADC_GAIN5, asynFloat64, 38, f, "" }
        { ADC_GAIN6, asynFloat64, 39, f, "" }
        { ADC_GAIN7, asynFloat64, 40, f, "" }
        { ADC_GAIN8, asynFloat64, 41, f, "" }
        { ADC_GAIN9, asynFloat64, 42, f, "" }
        { ADC_GAIN10, asynFloat64, 43, f, "" }
        { ADC_GAIN11, asynFloat64, 44, f, "" }
        { ADC0, asynFloat64, 45, f, V }
        { ADC1, asynFloat64, 46, f, V }
        { ADC2, asynFloat64, 47, f, V }
        { ADC3, asynFloat64, 48, f, V }
        { ADC4, asynFloat64, 49, f, V }
        { ADC5, asynFloat64, 50, f, V }
        { ADC6, asynFloat64, 51, f, V }
        { ADC7, asynFloat64, 52, f, V }
        { ADC8, asynFloat64, 53, f, V }
        { ADC9, asynFloat64, 54, f, V }
        { ADC10, asynFloat64, 55, f, V }
        { ADC11, asynFloat64, 56, f, V }
        { I_FIL_MEAS, asynFloat64, 57, f, A }
        { V_FIL_MEAS, asynFloat64, 58, f, V }
        { I_HV_MEAS, asynFloat64, 59, f, S }
        { V_HV_MEAS, asynFloat64, 60, f, V }
        { I_GUN_MEAS, asynFloat64, 61, f, A }
        { FIL_RESISTANCE, asynFloat64, 62, f, Ohm }
        { DAC_VALUE, asynInt32, 63, i, "" }
        { DIG_INPUTS, asynInt32, 64, i, "" }
        { COUNTER_1HZ, asynInt32, 65, i, "" }
        { tCC_TEMPERATURE, asynFloat64, 66, f, °C }
        { AGPS_TEMPERATURE, asynFloat64, 67, f, °C }
        { I_FIL_SETPOINT, asynFloat64, 68, f, A }
        { V_FIL_SETPOINT, asynFloat64, 69, f, V }
        { I_HV_SETPOINT, asynFloat64, 70, f, A }
        { V_HV_SETPOINT, asynFloat64, 71, f, V }
        { I_HV_STANDBY_REFERENCE, asynFloat64, 72, f, A }
        { I_GUN_TRIG_REFERENCE, asynFloat64, 73, f, A }
        { KP_STANDBY, asynFloat64, 74, f, "" }
        { KI_STANDBY, asynFloat64, 75, f, "" }
        { KD_STANDBY, asynFloat64, 76, f, "" }
        { KP_TRIG, asynFloat64, 77, f, "" }
        { KI_TRIG, asynFloat64, 78, f, "" }
        { KD_TRIG, asynFloat64, 79, f, "" }
        { TRIG_PERIOD, asynFloat64, 80, f, "" }
        { DI_DT_MAX, asynFloat64, 81, f, A/s }
        { DIG_OUTPUTS, asynInt32, 82, i, "" }
        { DAC_SETPOINT0, asynFloat64, 83, f, V }
        { DAC_SETPOINT1, asynFloat64, 84, f, V }
        { DAC_SETPOINT2, asynFloat64, 85, f, V }
        { DAC_SETPOINT3, asynFloat64, 86, f, V }
        { I_FIL_INTERLOCK_VAL, asynFloat64, 87, f, A }
        { V_FIL_INTERLOCK_VAL, asynFloat64, 88, f, V }
        { I_HV_INTERLOCK_VAL, asynFloat64, 89, f, A }
        { V_HV_INTERLOCK_VAL, asynFloat64, 90, f, V }
        { I_GUN_INTERLOCK_VAL, asynFloat64, 91, f, A }
        { I_GUN_SPARK_INTERLOCK_VAL, asynFloat64, 92, f, A }
        { I_GUN_SPARK_INTERLOCK_COUNT, asynInt32, 93, i, "" }
        { FIL_RESISTANCE_INTERLOCK_VAL, asynFloat64, 94, f, Ohm }
        { STANDBY_EMISSION_INTERLOCK_VAL, asynFloat64, 95, f, A }
        { TRIGON_EMISSION_INTERLOCK_VAL, asynFloat64, 96, f, A }
        { INTERLOCKS_MASK, asynInt32, 97, i, "" }
        { REGISTER_COUNT, asynInt32, 98, i, "" }
