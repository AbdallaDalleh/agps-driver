record(mbbo, "$(SYS):setCommand") {
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT), 255) i_parameter")
	field(ZRST, "Empty")            field(ZRVL, "0")
    field(ONST, "OFF")              field(ONVL, "1")
    field(TWST, "Standby")          field(TWVL, "2")
    field(THST, "Trigger ON")       field(THVL, "3")
    field(FRST, "Interlock")        field(FRVL, "4")
    field(FVST, "Reset")            field(FVVL, "5")
    field(SXST, "Start Logger")     field(SXVL, "6")
    field(SVST, "Stop Logger")      field(SVVL, "7")
    field(EIST, "Read Flash")       field(EIVL, "8")
    field(NIST, "Write Flash")      field(NIVL, "9")
	field(TEST, "Calibrate ADC")    field(TEVL, "10")
	field(ELST, "Copy Calibration") field(ELVL, "11")
	field(TVST, "Control Remote")   field(TVVL, "12")
	field(TTST, "Control Local")    field(TTVL, "13")
    field(FTST, "Reset Firmware")   field(FTVL, "255")
}

record(mbbi, "$(SYS):getState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 1)i_register")
    field(ZRST, "OFF")          field(ZRVL, "0")
    field(ONST, "Ramping Up")   field(ONVL, "1")
    field(TWST, "Ramping Down") field(TWVL, "2")
    field(THST, "Standby")      field(THVL, "3")
    field(FRST, "Trigger On")   field(FRVL, "4")
    field(FVST, "Reset")        field(FVVL, "5")
	field(SXST, "Local")        field(SXVL, "6")
    field(SVST, "Timeout")      field(SVVL, "10")
    field(EIST, "Interlock")    field(EIVL, "20")
    field(NIST, "Undefined")    field(NIVL, "999")
}

record(mbbi, "$(SYS):getFilamentState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 2)i_register")
    field(ZRST, "OFF")       field(ZRVL, "0")
    field(ONST, "ON")        field(ONVL, "1")
    field(TWST, "Fault")     field(TWVL, "2")
    field(THST, "Transient") field(THVL, "3")
    field(FRST, "Timeout")   field(FRVL, "10")
    field(FVST, "Interlock") field(FVVL, "20")
    field(SXST, "Undefined") field(SXVL, "999")
}

record(mbbi, "$(SYS):getHVState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 3)i_register")
    field(ZRST, "OFF")       field(ZRVL, "0")
    field(ONST, "ON")        field(ONVL, "1")
    field(TWST, "Fault")     field(TWVL, "2")
    field(THST, "Transient") field(THVL, "3")
    field(FRST, "Timeout")   field(FRVL, "10")
    field(FVST, "Interlock") field(FVVL, "20")
    field(SXST, "Undefined") field(SXVL, "999")
}

record(mbbi, "$(SYS):getRegulatorState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 4)i_register")
    field(ZRST, "OFF")          field(ZRVL, "0")
    field(ONST, "Ramping Up")   field(ONVL, "1")
    field(TWST, "Ramping Down") field(TWVL, "2")
    field(THST, "Standby")      field(THVL, "3")
    field(FRST, "Trigger On")   field(FRVL, "4")
    field(FVST, "Undefined")    field(FVVL, "999")
}

record(mbbi, "$(SYS):getLoggerState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 5)i_register")
    field(ZRST, "OFF")        field(ZRVL, "0")
    field(ONST, "ON")         field(ONVL, "1")
    field(TWST, "Postmortem") field(TWVL, "2")
    field(THST, "Interlock")  field(THVL, "20")
    field(FRST, "Undefined")  field(FRVL, "999")
}

record(mbbi, "$(SYS):getSupervisorState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 7)i_register")
    field(ZRST, "ON")        field(ZRVL, "0")
    field(ONST, "Interlock") field(ONVL, "20")
    field(TWST, "Undefined") field(TWVL, "999")
}

record(mbbi, "$(SYS):getControlInterface") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT), 8)i_register")
    field(ZRST, "UNDECIDED")           field(ZRVL, "0")
    field(ONST, "TCP CLI")             field(ONVL, "1")
    field(TWST, "TCP DATASTREAM")      field(TWVL, "2")
    field(THST, "UDP DATASTREAM")      field(THVL, "3")
    field(FRST, "USB")   	       field(FRVL, "4")
    
}
record(mbbiDirect, "$(SYS):getInterlocksState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT) 10 0xFFFF)i_register")
}

record(mbbiDirect, "$(SYS):getWarningsState") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT) 13 0x1F)i_register")
}

record(mbbiDirect, "$(SYS):getHVPSStatus") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT) 14 0x1F)i_register")
}

record(mbbiDirect, "$(SYS):getFILPSStatus") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT) 15 0x1F)i_register")
}

record(longout, "$(SYS):takeControl")
{
	field(PINI, "YES")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT) 0)control")
}

record(mbbi, "$(SYS):getFIRST_INTERLOCK") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AGPS, 11)i_register")
    field(ZRST, "EMPTY")                field(ZRVL, "0")
    field(ONST, "External Interlock")   field(ONVL, "1")
    field(TWST, "Filament Overcurrent") field(TWVL, "2")
    field(THST, "Filament OverVoltage") field(THVL, "4")
    field(FRST, "HV Overcurrent")       field(FRVL, "8")
    field(FVST, "HV OverVoltage")       field(FVVL, "16")
    field(SXST, "Gun Sparks")           field(SXVL, "32")
    field(SVST, "Gun Current Interlock")field(SVVL, "64")
    field(EIST, "Standby Emission")     field(EIVL, "128")
    field(NIST, "Trigger On Emission")  field(NIVL, "256")
    field(TEST, "Filament Resistance")  field(TEVL, "512")
    field(ELST, "HV PS Time-out")       field(ELVL, "1024")
    field(TVST, "FIL PS Time-out")      field(TVVL, "2048")
    field(TTST, "HV PS Fault")          field(TTVL, "4096")
    field(FTST, "FIL PS Fault")         field(FTVL, "8192")
    field(FFST, "Software Interlock")   field(FFVL, "32768")
}

record(mbbi, "$(SYS):getSECOND_INTERLOCK") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AGPS, 12)i_register")
    field(ZRST, "EMPTY")                field(ZRVL, "0")
    field(ONST, "External Interlock")   field(ONVL, "1")
    field(TWST, "Filament Overcurrent") field(TWVL, "2")
    field(THST, "Filament OverVoltage") field(THVL, "4")
    field(FRST, "HV Overcurrent")       field(FRVL, "8")
    field(FVST, "HV OverVoltage")       field(FVVL, "16")
    field(SXST, "Gun Sparks")           field(SXVL, "32")
    field(SVST, "Gun Current Interlock")field(SVVL, "64")
    field(EIST, "Standby Emission")     field(EIVL, "128")
    field(NIST, "Trigger On Emission")  field(NIVL, "256")
    field(TEST, "Filament Resistance")  field(TEVL, "512")
    field(ELST, "HV PS Time-out")       field(ELVL, "1024")
    field(TVST, "FIL PS Time-out")      field(TVVL, "2048")
    field(TTST, "HV PS Fault")          field(TTVL, "4096")
    field(FTST, "FIL PS Fault")         field(FTVL, "8192")
    field(FFST, "Software Interlock")   field(FFVL, "32768")
}
record(mbbi, "$(SYS):getControlMode") {
    field(PINI, "YES")
    field(SCAN, ".2 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AGPS, 9)i_register")
    field(ZRST, "Remote Mode")  field(ZRVL, "0")
    field(ONST, "Local Mode")   field(ONVL, "1")
}
record(ai, "$(SYS):getERROR") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 16)f_register")
    field(PINI, "YES")
    field(EGU,  "A")
}

record(ao, "$(SYS):setERROR") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 16)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "A")
    field(FLNK, "$(SYS):getERROR")
}
record(ai, "$(SYS):getDRIVE_DIFF") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 17)f_register")
    field(PINI, "YES")
    field(EGU,  "A")
}

record(ao, "$(SYS):setDRIVE_DIFF") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 17)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "A")
    field(FLNK, "$(SYS):getDRIVE_DIFF")
}
record(ai, "$(SYS):getDRIVE") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 18)f_register")
    field(PINI, "YES")
    field(EGU,  "A")
}

record(ao, "$(SYS):setDRIVE") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 18)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "A")
    field(FLNK, "$(SYS):getDRIVE")
}
record(ai, "$(SYS):getTRIGGER_COUNT") {
    field(DTYP, "asynInt32")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 19)i_register")
    field(PINI, "YES")
    field(EGU,  "")
}

record(ao, "$(SYS):setTRIGGER_COUNT") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT) 19)i_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "")
    field(FLNK, "$(SYS):getTRIGGER_COUNT")
}
record(ai, "$(SYS):getGUN_SPARKS_COUNT") {
    field(DTYP, "asynInt32")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 20)i_register")
    field(PINI, "YES")
    field(EGU,  "")
}

record(ao, "$(SYS):setGUN_SPARKS_COUNT") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT) 20)i_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "")
    field(FLNK, "$(SYS):getGUN_SPARKS_COUNT")
}

record(ai, "$(SYS):getADC0") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 45)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC0") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 45)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC0")
}
record(ai, "$(SYS):getADC1") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 46)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC1") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 46)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC1")
}
record(ai, "$(SYS):getADC2") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 47)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC2") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 47)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC2")
}
record(ai, "$(SYS):getADC3") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 48)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC3") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 48)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC3")
}
record(ai, "$(SYS):getADC4") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 49)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC4") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 49)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC4")
}
record(ai, "$(SYS):getADC5") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 50)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC5") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 50)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC5")
}
record(ai, "$(SYS):getADC6") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 51)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC6") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 51)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC6")
}
record(ai, "$(SYS):getADC7") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 52)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC7") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 52)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC7")
}
record(ai, "$(SYS):getADC8") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 53)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC8") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 53)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC8")
}
record(ai, "$(SYS):getADC9") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 54)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC9") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 54)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC9")
}
record(ai, "$(SYS):getADC10") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 55)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC10") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 55)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC10")
}
record(ai, "$(SYS):getADC11") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 56)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setADC11") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 56)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getADC11")
}
record(ai, "$(SYS):getI_FIL_MEAS") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 57)f_register")
    field(PINI, "YES")
    field(EGU,  "A")
}

record(ao, "$(SYS):setI_FIL_MEAS") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 57)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "A")
    field(FLNK, "$(SYS):getI_FIL_MEAS")
}
record(ai, "$(SYS):getV_FIL_MEAS") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 58)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setV_FIL_MEAS") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 58)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getV_FIL_MEAS")
}
record(ai, "$(SYS):getI_HV_MEAS") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 59)f_register")
    field(PINI, "YES")
    field(EGU,  "S")
}

record(ao, "$(SYS):setI_HV_MEAS") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 59)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "S")
    field(FLNK, "$(SYS):getI_HV_MEAS")
}
record(ai, "$(SYS):getV_HV_MEAS") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 60)f_register")
    field(PINI, "YES")
    field(EGU,  "V")
}

record(ao, "$(SYS):setV_HV_MEAS") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 60)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "V")
    field(FLNK, "$(SYS):getV_HV_MEAS")
}
record(ai, "$(SYS):getI_GUN_MEAS") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 61)f_register")
    field(PINI, "YES")
    field(EGU,  "A")
}

record(ao, "$(SYS):setI_GUN_MEAS") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 61)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "A")
    field(FLNK, "$(SYS):getI_GUN_MEAS")
}
record(ai, "$(SYS):getFIL_RESISTANCE") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 62)f_register")
    field(PINI, "YES")
    field(EGU,  "Ohm")
}

record(ao, "$(SYS):setFIL_RESISTANCE") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 62)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "Ohm")
    field(FLNK, "$(SYS):getFIL_RESISTANCE")
}
record(ai, "$(SYS):gettCC_TEMPERATURE") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 66)f_register")
    field(PINI, "YES")
    field(EGU,  "°C")
}

record(ao, "$(SYS):settCC_TEMPERATURE") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 66)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "°C")
    field(FLNK, "$(SYS):gettCC_TEMPERATURE")
}
record(ai, "$(SYS):getAGPS_TEMPERATURE") {
    field(DTYP, "asynFloat64")
    field(SCAN, ".2 second")
    field(INP,  "@asyn($(PORT) 67)f_register")
    field(PINI, "YES")
    field(EGU,  "°C")
}

record(ao, "$(SYS):setAGPS_TEMPERATURE") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT) 67)f_register")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU,  "°C")
    field(FLNK, "$(SYS):getAGPS_TEMPERATURE")
}

